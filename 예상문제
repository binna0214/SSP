//
//  file_text.c
//  struct_test
//
//  Created by ARISU KIM on 2017. 8. 19..
//  Copyright © 2017년 ARISU KIM. All rights reserved.
//

#include "file_text.h"

#include <stdio.h>
#include <string.h>
#include <stdlib.h>


typedef struct vehicle{
    char abVehicleNo[4];
    char buf;
    char abTime[10];
    char lf[1];
}Vehicle;

typedef struct result{
    int vehicle;
    double time;
    int cnt;
    char buf;
}Result;

/* 문제 1 */
/*
int main()
{
   // char Temp[15];
    int tempNo;
    FILE *ptr_file, *out_file;
    Vehicle stTemp;
    Result stResult[1024];
    int index = 0;                      //문제에서 주어질 갯수
    int i =0;
    int j = 0;
    float ftime = 0.0;
    
    ptr_file = fopen("/Users/BinnaKim/Documents/struct_test/file_read/line.txt", "rb");
    memset(stResult, 0x00, sizeof(stResult));
    
    if(ptr_file == NULL)    {
        printf("fail!\n");
        return 0;
    }
    
    out_file = fopen("/Users/BinnaKim/Documents/struct_test/file_read/output.txt", "wb");
    
    if(out_file == NULL)
    {
        printf("??????\n");
        return 0;
    }
    
    while(!feof(ptr_file))
    {
        memset(&stTemp,0x00,sizeof(stTemp));
        tempNo = 0;
        fread(&stTemp, sizeof(stTemp), 1, ptr_file);
        
        //stResult[index].time= atof(stTemp.abTime);
        //stResult[index].vehicle = atoi(stTemp.abVehicleNo);

        tempNo = atoi(stTemp.abVehicleNo);

        stResult[tempNo].vehicle = tempNo;
        stResult[tempNo].time +=  (double)atof(stTemp.abTime) ;
        stResult[tempNo].cnt ++;

        index++;
        
    }
    for(i=0; i<index; i++)
    {
        stResult[i].time = stResult[i].time/stResult[i].cnt;
    }
 
 
    for(i=0; i<index; i++)
    {
        //printf("index: %d , vehicle no : %d, time : %5.5f \n", i, stResult[i].vehicle, stResult[i].time);
        for(j=i+1; j<index; j++)
        {
           if ( stResult[i].time < stResult[j].time )
           {
               ftime = stResult[i].time;
               stResult[i].time = stResult[j].time;
               stResult[j].time = ftime;
               
               tempNo = stResult[i].vehicle;
               stResult[i].vehicle = stResult[j].vehicle;
               stResult[j].vehicle = tempNo;
           }
        }
        
    }
    for(i=0; i<index; i++)
    {
        if( stResult[i].cnt == 0 )
           continue;
        else
            printf("index: %d , vehicle no : %04d, time : %05.4f \n", i, stResult[i].vehicle, stResult[i].time);
    }
    
    for( i=0; i<=index; i++)
    {
        if( stResult[i].cnt == 0 )
            continue;
        else
            fprintf(out_file, "%04d%c%05.4f\n", stResult[i].vehicle,',' ,stResult[i].time);
    }
    
    fclose(out_file);
    fclose(ptr_file);
    
    return 0;
}
*/

// 문제 2
// output file을 여러개 만든다
/*
int main()
{
    //int tempNo;
    FILE *ptr_file, *out_file;
    Vehicle stTemp;                     //file 형식에 맞는 구조체 (읽어야하니까)
    Result stResult[1024];              //문제에서 주어질 갯수만큼 만드는 result temp
    //int index = 0;                      //문제에서 주어질 갯수
    //int i =0;
    //int j = 0;
    int nVehicleNo = 0;
    //float ftime = 0.0;
    char abPath[128] = {0,};            //결과 파일들 Path
    //file경로 뿌릴때 \\ 한번더 하는거 잊지말기
    ptr_file = fopen("/Users/BinnaKim/Documents/struct_test/file_read/line.txt", "rb");
    memset(stResult, 0x00, sizeof(stResult));
    
    if(ptr_file == NULL)    {
        printf("fail!\n");
        return 0;
    }
    
    while(!feof(ptr_file))
    {
        memset(&stTemp,0x00,sizeof(stTemp));
        fread(&stTemp, sizeof(stTemp), 1, ptr_file);
        
        nVehicleNo = atoi(stTemp.abVehicleNo);
        
        memset(abPath, 0x00, sizeof(abPath));
        
        sprintf(abPath, "/Users/BinnaKim/Documents/struct_test/file_read/%04d_log01.txt", nVehicleNo);
        
        printf("%s\n", abPath);
        
        out_file = fopen("abPath", "wb");
        if(out_file == NULL)
        {
            printf("\n\n\nfail!\n");
            return -1;
        }
        
        fprintf(out_file, "%4s%c%10s\n", stTemp.abVehicleNo,stTemp.buf,stTemp.abTime);
        fclose(out_file);
    }

       fclose(ptr_file);
    
    return 0;
}
*/

//문제3
//문자인경우이다
//각 패턴이 몇개인지를 기록한다
//aaa:5 bbb: 6 이런식
/*
typedef struct{
    char abType[3];
    char buf;
    char number[5];
    char cr;
}stTemp;

typedef struct{
    char abType[3];
    int total;
}result2;

int main()
{
    //int tempNo;
    FILE *ptr_file, *out_file;
    stTemp Temp;                      //file 형식에 맞는 구조체 (읽어야하니까)
    result2 stResult[20];                // 문제에서 패턴이 몇개 있는지 알려줄 것임
    //file경로 뿌릴때 \\ 한번더 하는거 잊지말기
    int i =0;
    int index = 0;
    int find = 0;
    ptr_file = fopen("/Users/BinnaKim/Documents/struct_test/file_read/input1.txt", "rb");
    memset(stResult, 0x00, sizeof(stResult));
    
    if(ptr_file == NULL)    {
        printf("fail!\n");
        return 0;
    }
    
    while(!feof(ptr_file))
    {
        memset(&Temp,0x00,sizeof(stTemp));
        fread(&Temp, sizeof(stTemp), 1, ptr_file);
        find= 0;
        
        for(i=0; i<=index; i++)
        {
            if( strncmp(stResult[i].abType, Temp.abType, 3) == 0 )
            {
                stResult[i].total++;
                find = 1;
            }
        }
        if(find == 0)
        {
            strncpy(stResult[index].abType, Temp.abType, 3);
            stResult[index].total++;
            index++;
        }
        
    }
    
    fclose(ptr_file);
    
    printf("hi\n");
    
    
    out_file = fopen("/Users/BinnaKim/Documents/struct_test/file_read/result2.txt", "wb");
    if(out_file == NULL)
    {
        printf("\n\n\nfail!\n");
        return -1;
    }
    for(i = 0; i<index; i++)
    {
        printf("stResult[%d].type : %s, total : %d\n", i, stResult[i].abType,stResult[i].total);
        fprintf(out_file, "%3s:%d\n", stResult[i].abType, stResult[i].total);
    }
    fclose(out_file);
    return 0;
}
*/
